version: '3'

services:

  timescaledb:
    build: .
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - timedb:/var/lib/postgresql/data
      - ./${POSTGRES_DBNAME}.sql:/docker-entrypoint-initdb.d/${POSTGRES_DBNAME}.sql
      - ./insert-queue-data:/etc/ofelia/insert-queue-data
      - ./insert-sample-data:/etc/ofelia/insert-sample-data
    networks:
      - timescalenet

  grafana:
    image: grafana/grafana:latest
    container_name: ${GRAFANA_CONTAINER}
    restart: always
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}
      GF_SERVER_ROOT_URL: http://${GRAFANA_HOST}:${GRAFANA_PORT}/grafana/
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      GF_USERS_DEFAULT_THEME: "dark"
      GF_INSTALL_PLUGINS: grafana-worldmap-panel, citilogics-geoloop-panel
    volumes:
      - grafana:/var/lib/grafana:rw
    depends_on:
      - timescaledb
    networks:
      - timescalenet

  scheduler:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config.ini:/etc/ofelia/config.ini
    depends_on:
      - timescaledb
    networks:
      - timescalenet

networks:
  timescalenet:
    driver: bridge

volumes:
  timedb:
  grafana:
